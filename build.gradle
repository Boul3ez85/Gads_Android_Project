// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"

android {
    compileSdkVersion 30
    buildToolVersion"30.0.1"

    defaultConfig {
        applicationId "com.example.gadsleaderboard"
        miniSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentaionRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOption {
        sourceCompatibility JavaVersion.VERSION_1_8
        tragetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        def retrofit2 = "2.9.0"
        def googleMaterial = "1.2.0"

        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation files('libs/com.ibm.icu_3.4.4.1.jar')
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "androidx.core:core-ktx:1.3.1"
        implementation "androidx.constraintlayout:appcompat:1.2.0"
        implementation "androidx.recyclerview:recyclerview:1.1.0"
        implementation "com.google.android.material:material:$googleMaterial"

        //RETROFIT
        implementation "com.squareup.retrofit2:retrofit:$retrofit2"
        implementation "com.squareup.retrofit2:converter-gson:2.7.0"

        testImplementation 'junit:juint:4.13'
        androidTestImplemantation 'androidx.test.ext:juint:1.1.2'
        androidTestImplemantation 'androidx.test.espresso:espresso-core:3.3.0'


        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}